.corners {
	background:none;
	zoom: expression(runtimeStyle.zoom = 1,
	insertAdjacentHTML('afterBegin','<div class="left_top"></div><div class="right_top"></div><div class="top"></div><div class="right"></div><div class="left_bottom"></div><div class="right_bottom"></div><div class="left"></div><div class="bottom"></div>'));
	padding:18px;
	margin:0;  
}
.corners .inner {
	background:none;
	padding:0;
	margin:0;
}
.left_top,.right_top,.right_bottom,.left_bottom,.top,.right,.bottom, .left {
	position:absolute;
	zoom:1;
	font-size:0;
}
.left_top,.right_top,.right_bottom,.left_bottom {
	width:18px;
	height:18px;
}
.top {
	left: 18px;
	top: 0;
	right: 18px;
	height: 18px;
	background: url("images/top.png") repeat-x;
	width: expression( this.parentNode.clientWidth - 36 + 'px' ); 
}
.right {
	right:0;
	top:18px;
	bottom:18px;
	width:18px;
	background:url("images/right.png") repeat-y;
	height: expression( this.parentNode.clientHeight - 36 + 'px' );  
}
.bottom {
	left:18px;
	bottom:0;
	right:18px;
	height:18px;
	background:url("images/bottom.png") repeat-x;
	width: expression( this.parentNode.clientWidth - 36 + 'px' ); 
}
.left {
	left:0;
	top:18px;
	bottom:18px;
	width:18px;
	background:url("images/left.png") repeat-y;
	height: expression( this.parentNode.clientHeight - 36 + 'px' );  
}
.left_top {
	background:url("images/left_top.png") 0 0 no-repeat;
	left:0;
	top:0;
} 
.right_top {
	background:url("images/right_top.png") 100% 0 no-repeat;
	right:0;
	top:0;
}

.right_bottom {
	background:url("images/right_bottom.png") 100% 100% no-repeat;
	right:0;
	bottom:0;
}
.left_bottom {
	background:url("images/left_bottom.png") 0 100% no-repeat;
	left:0;
	bottom:0;
} 